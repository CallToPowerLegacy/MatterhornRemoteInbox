/*
 * Copyright 2013-2015 Denis Meyer
 * All rights reserved.
 */
package de.calltopower.mhri.gui;

import java.awt.Color;
import java.awt.Container;
import de.calltopower.mhri.util.KeyFileUtils;
import java.awt.Desktop;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.apache.log4j.Logger;
import de.calltopower.mhri.util.Constants;

/**
 * About
 *
 * @date 21.08.2012
 *
 * @author Denis Meyer (calltopower88@gmail.com)
 */
public class About extends javax.swing.JFrame {

    private static final Logger logger = Logger.getLogger(About.class);
    private final String keyFile;
    private final KeyFileUtils kfu;
    private final Color bgColor = new Color(200, 200, 200);

    public About(String keyFile) {
        initComponents();
        kfu = new KeyFileUtils();

        this.keyFile = keyFile;

        this.setTitle(Constants.getInstance().getLocalizedString("About"));
        this.jLabel1.setText(Constants.getInstance().getLocalizedString("Version"));
        this.jLabel2.setText(Constants.getInstance().getLocalizedString("Build"));
        this.jLabel3.setText(Constants.getInstance().getLocalizedString("Key"));
        this.button_import_key.setText(Constants.getInstance().getLocalizedString("ImportKey"));
        this.button_copy_key.setText(Constants.getInstance().getLocalizedString("CopyKey"));
        this.button_save_key.setText(Constants.getInstance().getLocalizedString("SaveKey"));
        this.label_registerOnline.setText(Constants.getInstance().getLocalizedString("RegisterOnline"));
        this.jLabel4.setText(Constants.getInstance().getLocalizedString("Authors"));
        this.label_author2.setText(Constants.getInstance().getLocalizedString("Active"));
        this.label_author1.setText(Constants.getInstance().getLocalizedString("Former"));
        this.jLabel5.setText(Constants.getInstance().getLocalizedString("Organizations"));

        this.label_version_no.setText(Constants.MHRI_VERSION);
        this.label_build_no.setText(Constants.MHRI_BUILD);
        this.label_mhriLogo.setText("");

        this.setLocationRelativeTo(null);
        this.panelMain.requestFocus();

        loadValues();
        this.panelMain.requestFocus();

        ArrayList<Container> containerList = new ArrayList<>();
        containerList.add(button_copy_key);
        containerList.add(button_import_key);
        containerList.add(button_save_key);
        containerList.add(panelMain);
        containerList.add(panel0);
        containerList.add(panel1);
        containerList.add(panel2);
        containerList.add(panel3);
        containerList.add(panel4);
        containerList.add(panel5);
        containerList.add(panel6);
        containerList.add(panel7);
        containerList.add(panel8);
        containerList.add(panel9);
        for (Container c : containerList) {
            c.setBackground(bgColor);
            final JFrame win = this;
            c.addKeyListener(new KeyAdapter() {
                @Override
                public void keyReleased(KeyEvent evt) {
                    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
                        win.dispose();
                    }
                }
            });
        }
    }

    public String getKey() {
        loadKey();
        return this.label_key_no.getText();
    }

    public final void loadValues() {
        loadKey();
    }

    private void loadKey() {
        try {
            this.label_key_no.setText(kfu.getKey(this.keyFile));
        } catch (IOException ex) {
            logger.error("IOException: " + ex.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        panelMain = new javax.swing.JPanel();
        panel0 = new javax.swing.JPanel();
        panel1 = new javax.swing.JPanel();
        ImageIcon ii = null;
        try {
            BufferedImage bi = ImageIO.read(getClass().getResourceAsStream("/ui/matterhorn-icon.png"));
            ii = new ImageIcon(bi);
        } catch (IOException ex) {
            logger.error("About::Constructor - IOException: " + ex.getMessage());
        }
        if(ii != null) {
            label_mhriLogo = new javax.swing.JLabel(ii);
            label_mhri = new javax.swing.JLabel();
            panel2 = new javax.swing.JPanel();
            jLabel1 = new javax.swing.JLabel();
            label_version_no = new javax.swing.JLabel();
            panel3 = new javax.swing.JPanel();
            jLabel2 = new javax.swing.JLabel();
            label_build_no = new javax.swing.JLabel();
            panel4 = new javax.swing.JPanel();
            jLabel3 = new javax.swing.JLabel();
            label_key_no = new javax.swing.JLabel();
            panel5 = new javax.swing.JPanel();
            panel9 = new javax.swing.JPanel();
            button_import_key = new javax.swing.JButton();
            button_copy_key = new javax.swing.JButton();
            button_save_key = new javax.swing.JButton();
            panel8 = new javax.swing.JPanel();
            label_registerOnline = new javax.swing.JLabel();
            panel6 = new javax.swing.JPanel();
            jLabel4 = new javax.swing.JLabel();
            label_author2 = new javax.swing.JLabel();
            label_author_name_1_email = new javax.swing.JLabel();
            label_author1 = new javax.swing.JLabel();
            label_author_name_2_email = new javax.swing.JLabel();
            panel7 = new javax.swing.JPanel();
            jLabel5 = new javax.swing.JLabel();
            label_organizations_elanev_link = new javax.swing.JLabel();
            label_organizations_uos_link = new javax.swing.JLabel();
            label_organizations_virtuos_link = new javax.swing.JLabel();

            setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
            setTitle("About");
            setAlwaysOnTop(true);
            setBackground(new java.awt.Color(153, 153, 153));
            setMinimumSize(new java.awt.Dimension(416, 475));
            setName("about"); // NOI18N
            setUndecorated(true);
            setResizable(false);
            getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

            panelMain.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
            panelMain.setMinimumSize(new java.awt.Dimension(402, 468));
            panelMain.setPreferredSize(new java.awt.Dimension(402, 468));
            panelMain.setLayout(new java.awt.GridBagLayout());

            panel0.setBorder(javax.swing.BorderFactory.createEmptyBorder(15, 15, 0, 15));
            panel0.setAlignmentX(0.0F);
            panel0.setAlignmentY(0.0F);
            panel0.setPreferredSize(new java.awt.Dimension(402, 468));
            panel0.setLayout(new java.awt.GridBagLayout());

            panel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 0));

        } else {
            label_mhriLogo = new javax.swing.JLabel();
        }
        label_mhriLogo.setText("MHRI");
        panel1.add(label_mhriLogo);

        label_mhri.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        label_mhri.setText(" Matterhorn Remote Inbox");
        panel1.add(label_mhri);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        panel0.add(panel1, gridBagConstraints);

        panel2.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Version");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        panel2.add(jLabel1, gridBagConstraints);

        label_version_no.setText("VERSION");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        panel2.add(label_version_no, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panel0.add(panel2, gridBagConstraints);

        panel3.setLayout(new java.awt.GridBagLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Build");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        panel3.add(jLabel2, gridBagConstraints);

        label_build_no.setText("BUILD_NO");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        panel3.add(label_build_no, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panel0.add(panel3, gridBagConstraints);

        panel4.setLayout(new java.awt.GridBagLayout());

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Key");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        panel4.add(jLabel3, gridBagConstraints);

        label_key_no.setText("KEY");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        panel4.add(label_key_no, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panel0.add(panel4, gridBagConstraints);

        panel5.setLayout(new java.awt.GridBagLayout());

        panel9.setLayout(new java.awt.GridBagLayout());

        button_import_key.setText("Import key");
        button_import_key.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_import_keyActionPerformed(evt);
            }
        });
        button_import_key.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                button_import_keyKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panel9.add(button_import_key, gridBagConstraints);

        button_copy_key.setText("Copy to clipboard");
        button_copy_key.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_copy_keyActionPerformed(evt);
            }
        });
        button_copy_key.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                button_copy_keyKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panel9.add(button_copy_key, gridBagConstraints);

        button_save_key.setText("Export key");
        button_save_key.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_save_keyActionPerformed(evt);
            }
        });
        button_save_key.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                button_save_keyKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panel9.add(button_save_key, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 5, 10);
        panel5.add(panel9, gridBagConstraints);

        panel8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 0, 0));

        label_registerOnline.setForeground(new java.awt.Color(0, 51, 255));
        label_registerOnline.setText("Click here to register the software online");
        label_registerOnline.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                label_registerOnlineMouseClicked(evt);
            }
        });
        panel8.add(label_registerOnline);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        panel5.add(panel8, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panel0.add(panel5, gridBagConstraints);

        panel6.setLayout(new java.awt.GridBagLayout());

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Authors");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        panel6.add(jLabel4, gridBagConstraints);

        label_author2.setFont(new java.awt.Font("Lucida Grande", 1, 10)); // NOI18N
        label_author2.setText("Active");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        panel6.add(label_author2, gridBagConstraints);

        label_author_name_1_email.setForeground(new java.awt.Color(0, 51, 255));
        label_author_name_1_email.setText("Denis Meyer");
        label_author_name_1_email.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                label_author_name_1_emailMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 5, 0);
        panel6.add(label_author_name_1_email, gridBagConstraints);

        label_author1.setFont(new java.awt.Font("Lucida Grande", 1, 10)); // NOI18N
        label_author1.setText("Former");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        panel6.add(label_author1, gridBagConstraints);

        label_author_name_2_email.setText("Benjamin Wulff");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        panel6.add(label_author_name_2_email, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panel0.add(panel6, gridBagConstraints);

        panel7.setLayout(new java.awt.GridBagLayout());

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Organizations");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        panel7.add(jLabel5, gridBagConstraints);

        label_organizations_elanev_link.setForeground(new java.awt.Color(0, 51, 255));
        label_organizations_elanev_link.setText("ELAN e.V.");
        label_organizations_elanev_link.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                label_organizations_elanev_linkMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        panel7.add(label_organizations_elanev_link, gridBagConstraints);

        label_organizations_uos_link.setForeground(new java.awt.Color(0, 51, 255));
        label_organizations_uos_link.setText("University of Osnabrueck");
        label_organizations_uos_link.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                label_organizations_uos_linkMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        panel7.add(label_organizations_uos_link, gridBagConstraints);

        label_organizations_virtuos_link.setForeground(new java.awt.Color(0, 51, 255));
        label_organizations_virtuos_link.setText("virtUOS");
        label_organizations_virtuos_link.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                label_organizations_virtuos_linkMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        panel7.add(label_organizations_virtuos_link, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panel0.add(panel7, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panelMain.add(panel0, gridBagConstraints);

        getContentPane().add(panelMain);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void label_organizations_elanev_linkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label_organizations_elanev_linkMouseClicked
        if (Desktop.isDesktopSupported()) {
            try {
                URI uri = new URI("http://www.elan-ev.de");
                Desktop.getDesktop().browse(uri);
            } catch (URISyntaxException ex) {
                logger.error("About::label_author_name_1_emailMouseClicked - URISyntaxException" + ex.getMessage());
            } catch (IOException ex) {
                logger.error("About::label_author_name_1_emailMouseClicked - IOException" + ex.getMessage());
            }
        }
    }//GEN-LAST:event_label_organizations_elanev_linkMouseClicked

    private void label_organizations_virtuos_linkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label_organizations_virtuos_linkMouseClicked
        if (Desktop.isDesktopSupported()) {
            try {
                URI uri = new URI("http://www.virtuos.uni-osnabrueck.de");
                Desktop.getDesktop().browse(uri);
            } catch (URISyntaxException ex) {
                logger.error("About::label_author_name_1_email2MouseClicked - URISyntaxException" + ex.getMessage());
            } catch (IOException ex) {
                logger.error("About::label_author_name_1_email2MouseClicked - IOException" + ex.getMessage());
            }
        }
    }//GEN-LAST:event_label_organizations_virtuos_linkMouseClicked

    private void label_organizations_uos_linkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label_organizations_uos_linkMouseClicked
        if (Desktop.isDesktopSupported()) {
            try {
                URI uri = new URI("http://www.uni-osnabrueck.de");
                Desktop.getDesktop().browse(uri);
            } catch (URISyntaxException ex) {
                logger.error("About::label_author_name_1_email2MouseClicked - URISyntaxException" + ex.getMessage());
            } catch (IOException ex) {
                logger.error("About::label_author_name_1_email2MouseClicked - IOException" + ex.getMessage());
            }
        }
    }//GEN-LAST:event_label_organizations_uos_linkMouseClicked

    private void label_author_name_1_emailMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label_author_name_1_emailMouseClicked
        if (Desktop.isDesktopSupported()) {
            try {
                URI uri = new URI("mailto:calltopower88@gmail.com");
                Desktop.getDesktop().browse(uri);
            } catch (URISyntaxException ex) {
                logger.error("About::label_author_name_1_emailMouseClicked - URISyntaxException" + ex.getMessage());
            } catch (IOException ex) {
                logger.error("About::label_author_name_1_emailMouseClicked - IOException" + ex.getMessage());
            }
        }
    }//GEN-LAST:event_label_author_name_1_emailMouseClicked

    private void button_copy_keyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_copy_keyActionPerformed
        StringSelection stringSelection = new StringSelection(this.label_key_no.getText());
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
        clipboard.setContents(stringSelection, null);
        JOptionPane.showMessageDialog(
                this,
                Constants.getInstance().getLocalizedString("KeyCopied_msg"),
                Constants.getInstance().getLocalizedString("KeyCopied"),
                JOptionPane.INFORMATION_MESSAGE);
        this.panelMain.requestFocus();
    }//GEN-LAST:event_button_copy_keyActionPerformed

    private void button_save_keyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_save_keyActionPerformed
        JFileChooser fc = new JFileChooser();
        fc.setMultiSelectionEnabled(false);
        fc.setCurrentDirectory(new File("."));
        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        if (fc.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            String path = "";
            try {
                path = fc.getSelectedFile().getAbsolutePath();
                path = path.endsWith(File.separator) ? path : (path + File.separator);
                path += "mhri.key";
                File to = new File(path).getAbsoluteFile();

                boolean write = false;
                if (!to.exists() && to.createNewFile() && to.canWrite()) {
                    write = true;
                } else if (to.exists() && to.canWrite()) {
                    int result = JOptionPane.showConfirmDialog(
                            this,
                            Constants.getInstance().getLocalizedString("KeyFileFound_msg"),
                            Constants.getInstance().getLocalizedString("KeyFileFound"),
                            JOptionPane.YES_NO_OPTION);
                    if (result == JOptionPane.YES_OPTION) {
                        write = true;
                    }
                }
                if (write) {
                    String key = kfu.getKey(keyFile);
                    kfu.writeToFile(path, key);
                    if (logger.isInfoEnabled()) {
                        logger.info("About::button_save_keyActionPerformed - Successfully saved key file from: " + keyFile + " to " + path);
                    }
                    JOptionPane.showMessageDialog(
                            this,
                            Constants.getInstance().getLocalizedString("KeySave_msg"),
                            Constants.getInstance().getLocalizedString("KeySave"),
                            JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (IOException ex) {
                logger.error("About::button_save_keyActionPerformed - IOException: " + ex.getMessage());
                JOptionPane.showMessageDialog(
                        this,
                        Constants.getInstance().getLocalizedString("KeySaveFailed_msg"),
                        Constants.getInstance().getLocalizedString("KeySaveFailed"),
                        JOptionPane.ERROR_MESSAGE);
            } catch (Exception ex) {
                logger.error("About::button_save_keyActionPerformed - Exception: " + ex.getMessage());
                JOptionPane.showMessageDialog(
                        this,
                        Constants.getInstance().getLocalizedString("KeySaveFailed_msg"),
                        Constants.getInstance().getLocalizedString("KeySaveFailed"),
                        JOptionPane.ERROR_MESSAGE);
            }
        }
        this.panelMain.requestFocus();
    }//GEN-LAST:event_button_save_keyActionPerformed

    private void button_import_keyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_import_keyActionPerformed
        JFileChooser fc = new JFileChooser();
        fc.setMultiSelectionEnabled(false);
        fc.setCurrentDirectory(new File("."));
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        FileNameExtensionFilter filter = new FileNameExtensionFilter("MHRI key file", "key");
        fc.setFileFilter(filter);
        if (fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            String fileStr = "";
            try {
                fileStr = fc.getSelectedFile().getAbsolutePath();

                String key = kfu.getKey(fileStr);
                kfu.writeToFile(keyFile, key);
                loadKey();
                if (logger.isInfoEnabled()) {
                    logger.info("About::button_import_keyActionPerformed - Successfully imported the key file from: " + fileStr);
                    logger.info("About::button_import_keyActionPerformed - Successfully imported the key file to: " + keyFile);
                }
                JOptionPane.showMessageDialog(
                        this,
                        Constants.getInstance().getLocalizedString("KeyImported_msg"),
                        Constants.getInstance().getLocalizedString("KeyImported"),
                        JOptionPane.INFORMATION_MESSAGE);
            } catch (IOException ex) {
                logger.error("About::button_import_keyActionPerformed - IOException: " + ex.getMessage());
                JOptionPane.showMessageDialog(
                        this,
                        Constants.getInstance().getLocalizedString("KeyImportFailed_msg"),
                        Constants.getInstance().getLocalizedString("KeyImportFailed"),
                        JOptionPane.ERROR_MESSAGE);
                getKey();
            } catch (Exception ex) {
                logger.error("About::button_import_keyActionPerformed - Exception: " + ex.getMessage());
                JOptionPane.showMessageDialog(
                        this,
                        Constants.getInstance().getLocalizedString("KeyImportFailed_msg"),
                        Constants.getInstance().getLocalizedString("KeyImportFailed"),
                        JOptionPane.ERROR_MESSAGE);
                getKey();
            }
        }
        this.panelMain.requestFocus();
    }//GEN-LAST:event_button_import_keyActionPerformed

    private void label_registerOnlineMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label_registerOnlineMouseClicked
        if (Desktop.isDesktopSupported()) {
            try {
                URI uri = new URI("http://zentrum.virtuos.uni-osnabrueck.de/mhri/#register");
                Desktop.getDesktop().browse(uri);
            } catch (URISyntaxException ex) {
                logger.error("About::label_registerOnline - URISyntaxException" + ex.getMessage());
            } catch (IOException ex) {
                logger.error("About::label_registerOnline - IOException" + ex.getMessage());
            }
        }
        this.panelMain.requestFocus();
    }//GEN-LAST:event_label_registerOnlineMouseClicked

    private void button_copy_keyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_button_copy_keyKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            button_copy_keyActionPerformed(null);
        }
        this.panelMain.requestFocus();
    }//GEN-LAST:event_button_copy_keyKeyReleased

    private void button_import_keyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_button_import_keyKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            button_import_keyActionPerformed(null);
        }
        this.panelMain.requestFocus();
    }//GEN-LAST:event_button_import_keyKeyReleased

    private void button_save_keyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_button_save_keyKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            button_save_keyActionPerformed(null);
        }
        this.panelMain.requestFocus();
    }//GEN-LAST:event_button_save_keyKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_copy_key;
    private javax.swing.JButton button_import_key;
    private javax.swing.JButton button_save_key;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel label_author1;
    private javax.swing.JLabel label_author2;
    private javax.swing.JLabel label_author_name_1_email;
    private javax.swing.JLabel label_author_name_2_email;
    private javax.swing.JLabel label_build_no;
    private javax.swing.JLabel label_key_no;
    private javax.swing.JLabel label_mhri;
    private javax.swing.JLabel label_mhriLogo;
    private javax.swing.JLabel label_organizations_elanev_link;
    private javax.swing.JLabel label_organizations_uos_link;
    private javax.swing.JLabel label_organizations_virtuos_link;
    private javax.swing.JLabel label_registerOnline;
    private javax.swing.JLabel label_version_no;
    private javax.swing.JPanel panel0;
    private javax.swing.JPanel panel1;
    private javax.swing.JPanel panel2;
    private javax.swing.JPanel panel3;
    private javax.swing.JPanel panel4;
    private javax.swing.JPanel panel5;
    private javax.swing.JPanel panel6;
    private javax.swing.JPanel panel7;
    private javax.swing.JPanel panel8;
    private javax.swing.JPanel panel9;
    private javax.swing.JPanel panelMain;
    // End of variables declaration//GEN-END:variables
}
